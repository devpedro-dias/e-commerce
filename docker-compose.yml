services:

  service-auth:
    build:
      context: ./service-auth
      dockerfile: Dockerfile
    container_name: service-auth
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_DB_URI=mongodb://admin:123456@auth-db:27017/auth-db?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=my-strong-password
      - JWT_SECRET_KEY=secretkeyjwtutil
      - JWT_EXPIRATION=2h
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - auth-db
      - redis
      - kafka
    ports:
      - "8090:8090"

  auth-db:
    image: mongo:latest
    container_name: auth-db
    restart: always
    networks:
      - orchestrator-saga

  kafka:
    container_name: kafka
    image: apache/kafka:latest
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    networks:
      - orchestrator-saga
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  redpanda-console:
    container_name: redpanda
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - "8081:8080"
    networks:
      - orchestrator-saga
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:9092"]
    depends_on:
      - "kafka"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - orchestrator-saga
    command: [ "redis-server", "--requirepass", "my-strong-password" ]
    volumes:
      - ./data/redis:/data

networks:
  orchestrator-saga:
    driver: bridge
